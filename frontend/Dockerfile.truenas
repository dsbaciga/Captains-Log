# TrueNAS-specific frontend Dockerfile
# Uses nginx proxy configuration to avoid hardcoded API URLs

# Multi-stage build
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Build with relative URLs (will be proxied by nginx)
ARG VITE_API_URL=/api
ARG VITE_UPLOAD_URL=/uploads
RUN npm run build

# Production stage with nginx and proxy configuration
FROM nginx:alpine

# Copy TrueNAS-specific nginx config with API proxy
COPY nginx.truenas.conf /etc/nginx/conf.d/default.conf

# Copy built app
COPY --from=builder /app/dist /usr/share/nginx/html

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:80/health || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
