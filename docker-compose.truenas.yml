# Docker Compose for TrueNAS Scale
#
# TrueNAS Scale Deployment Instructions:
# 1. Create datasets for persistent data:
#    - /mnt/pool/captains-log/postgres
#    - /mnt/pool/captains-log/nominatim
#    - /mnt/pool/captains-log/uploads
#
# 2. Create .env file in the same directory with required variables
#
# 3. Deploy using TrueNAS Scale UI or CLI:
#    docker-compose -f docker-compose.truenas.yml up -d

version: "3.8"

services:
  # PostgreSQL with PostGIS
  db:
    image: postgis/postgis:16-3.4
    container_name: captains-log-db
    environment:
      POSTGRES_USER: captains_log_user
      POSTGRES_PASSWORD: pgBasco1988!
      POSTGRES_DB: captains_log-db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "30603:5432"
    volumes:
      # IMPORTANT: Update this path to match your TrueNAS dataset
      - /mnt/main_pool/captains-log/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U captains_log_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    # Resource limits (adjust based on your system)
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 2G
        reservations:
          cpus: "0.5"
          memory: 512M

  # Backend API
  backend:
    # Use pre-built image from GitHub Container Registry
    # Or build locally if you prefer
    image: ghcr.io/dsbaciga/captains-log-backend:latest
    container_name: captains-log-backend
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://captains_log_user:pgBasco1988!@db:5432/captains_log-db?schema=public
      JWT_SECRET: happyhorseteacups
      JWT_REFRESH_SECRET: touchymoosesister
      NOMINATIM_URL: http://nominatim:8080
      # Optional Integrations
      IMMICH_API_URL: https://immich.bacigalupo.us
      IMMICH_API_KEY: YErFLN6C6OFqZvOLuCT0ITBvcukZVs9IczErMV5E
      OPENWEATHERMAP_API_KEY: 2e96a9284968ea5aff9850c03d2e9de4
      AVIATIONSTACK_API_KEY: _
    ports:
      - "30601:5000"
    volumes:
      # IMPORTANT: Update this path to match your TrueNAS dataset
      - /mnt/main_pool/captains-log/uploads:/app/uploads
      - /mnt/main_pool/captains-log/logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:5000/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.25"
          memory: 256M

  # Frontend
  frontend:
    # Use pre-built image from GitHub Container Registry
    # Or build locally if you prefer
    image: ghcr.io/dsbaciga/captains-log-frontend:latest
    container_name: captains-log-frontend
    environment:
      # These are baked into the build, but can be overridden via nginx config
      VITE_API_URL: http://localhost:5000/api
      VITE_UPLOAD_URL: http://localhost:5000/uploads
    ports:
      - "30600:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:80",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 64M

  # Self-hosted Nominatim for geocoding
  # WARNING: Initial import takes 1-2 hours and requires significant resources
  # Consider using a smaller region or external Nominatim service for testing
  nominatim:
    image: mediagis/nominatim:4.4
    container_name: captains-log-nominatim
    environment:
      # Default: US map data (~10GB download)
      # For faster setup, use a smaller region:
      # - State: https://download.geofabrik.de/north-america/us/california-latest.osm.pbf
      # - City: https://download.geofabrik.de/europe/germany/berlin-latest.osm.pbf
      PBF_URL: https://download.geofabrik.de/north-america/us-latest.osm.pbf
      REPLICATION_URL: https://download.geofabrik.de/north-america/us-updates/
      IMPORT_WIKIPEDIA: "false"
      IMPORT_US_POSTCODES: "false"
      IMPORT_GB_POSTCODES: "false"
      THREADS: "4"
    ports:
      - "30602:8080"
    volumes:
      # IMPORTANT: Update this path to match your TrueNAS dataset
      - /mnt/main_pool/captains-log/nominatim:/var/lib/postgresql/14/main
    shm_size: 2gb
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 8G
        reservations:
          cpus: "1.0"
          memory: 2G
# NOTE: Using bind mounts instead of named volumes for TrueNAS
# This allows you to manage storage through TrueNAS datasets
# and take advantage of ZFS features (snapshots, replication, etc.)
